resource "aws_security_group" "habitat_depot" {
  name        = "habitat_depot_${random_id.instance_id.hex}"
  description = "Habitat Depot Server"
  vpc_id      = "${aws_vpc.habichef-vpc.id}"

  tags {
    Name          = "${var.tag_customer}-${var.tag_project}_${random_id.instance_id.hex}_${var.tag_application}_hab_depot_security_group"
    X-Dept        = "${var.tag_dept}"
    X-Customer    = "${var.tag_customer}"
    X-Project     = "${var.tag_project}"
    X-Application = "${var.tag_application}"
    X-Contact     = "${var.tag_contact}"
    X-TTL         = "${var.tag_ttl}"
  }
}

//////////////////////////
// Base Linux Rules
resource "aws_security_group_rule" "hd_ingress_allow_22_tcp_all" {
  type              = "ingress"
  from_port         = 22
  to_port           = 22
  protocol          = "tcp"
  cidr_blocks       = ["0.0.0.0/0"]
  security_group_id = "${aws_security_group.habitat_depot.id}"
}

////////////////////////////////
// Habitat Depot Rules
# HTTP (nginx)
resource "aws_security_group_rule" "ingress_habitat_depot_allow_80_tcp" {
  type              = "ingress"
  from_port         = 80
  to_port           = 80
  protocol          = "tcp"
  cidr_blocks       = ["0.0.0.0/0"]
  security_group_id = "${aws_security_group.habitat_depot.id}"
}

# HTTPS (nginx)
resource "aws_security_group_rule" "ingress_habitat_depot_allow_443_tcp" {
  type              = "ingress"
  from_port         = 443
  to_port           = 443
  protocol          = "tcp"
  cidr_blocks       = ["0.0.0.0/0"]
  security_group_id = "${aws_security_group.habitat_depot.id}"
}

# Allow leaderel connections
resource "aws_security_group_rule" "ingress_habitat_depot_allow_7331_tcp" {
  type                     = "ingress"
  from_port                = 7331
  to_port                  = 7331
  protocol                 = "tcp"
  security_group_id        = "${aws_security_group.habitat_depot.id}"
  source_security_group_id = "${aws_security_group.habitat_depot.id}"
}

# Egress: ALL
resource "aws_security_group_rule" "hd_linux_egress_allow_0-65535_all" {
  type              = "egress"
  from_port         = 0
  to_port           = 0
  protocol          = "-1"
  cidr_blocks       = ["0.0.0.0/0"]
  security_group_id = "${aws_security_group.habitat_depot.id}"
}

data "template_file" "bldr_env" {
  template = "${file("${path.module}/templates/habitat_depot/bldr.env.tpl")}"

  vars {
    habitat_depot_hostname = "${var.habitat_depot_hostname}"
    habitat_oauth_provider = "${var.habitat_oauth_provider}"
    habitat_oauth_userinfo_url = "${var.habitat_oauth_userinfo_url}"
    habitat_oauth_authorize_url = "${var.habitat_oauth_authorize_url}"
    habitat_oauth_token_url = "${var.habitat_oauth_token_url}"
    habitat_oauth_client_id = "${var.habitat_oauth_client_id}"
    habitat_oauth_client_secret = "${var.habitat_oauth_client_secret}"
  }
}

resource "aws_instance" "habitat_depot" {
  connection {
    user        = "${var.aws_ubuntu_image_user}"
    private_key = "${file("${var.aws_key_pair_file}")}"
  }

  ami                    = "${var.aws_ami_id == "" ? data.aws_ami.ubuntu.id : var.aws_ami_id}"
  instance_type          = "${var.automate_server_instance_type}"
  key_name               = "${var.aws_key_pair_name}"
  subnet_id              = "${aws_subnet.habichef-subnet-a.id}"
  vpc_security_group_ids = ["${aws_security_group.habitat_depot.id}"]
  ebs_optimized          = true

  root_block_device {
    delete_on_termination = true
    volume_size           = 100
    volume_type           = "gp2"
  }

  tags {
    Name          = "${format("habitat_depot_${random_id.instance_id.hex}")}"
    X-Dept        = "${var.tag_dept}"
    X-Customer    = "${var.tag_customer}"
    X-Project     = "${var.tag_project}"
    X-Application = "${var.tag_application}"
    X-Contact     = "${var.tag_contact}"
    X-TTL         = "${var.tag_ttl}"
  }

  provisioner "file" {
    destination = "/tmp/bldr.env"
    content     = "${data.template_file.bldr_env.rendered}"
  }

  provisioner "remote-exec" {
    inline = [
      "sudo hostnamectl set-hostname ${var.habitat_depot_hostname}",
      "sudo sysctl -w vm.max_map_count=262144",
      "sudo sysctl -w vm.dirty_expire_centisecs=20000",
      "sudo apt-get --assume-yes install git",
      "sudo git clone https://github.com/habitat-sh/on-prem-builder.git /tmp/on-prem-builder.git",
      "sudo cp /tmp/bldr.env /tmp/on-prem-builder.git/bldr.env",
      "sudo chmod +x /tmp/on-prem-builder.git/install.sh",
      "sudo openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj \"/C=US/ST=WA/L=Seattle/O=Sample/CN=${var.habitat_depot_hostname}\" -keyout /tmp/on-prem-builder.git/ssl-certificate.key  -out /tmp/on-prem-builder.git/ssl-certificate.crt",
      "echo 'cd /tmp/on-prem-builder.git; echo y | ./install.sh' | sudo bash -"
    ]
  }
}

output "habitat_depot_public_ip" {
  value = "${aws_instance.habitat_depot.public_ip}"
}